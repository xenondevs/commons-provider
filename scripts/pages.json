[{"name":"abstract fun <R : Any> observeWeak(owner: R, action: (owner: R) -> Unit)","description":"xyz.xenondevs.commons.provider.Provider.observeWeak","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/observe-weak.html","searchKeys":["observeWeak","abstract fun <R : Any> observeWeak(owner: R, action: (owner: R) -> Unit)","xyz.xenondevs.commons.provider.Provider.observeWeak"]},{"name":"abstract fun <R : Any> subscribeWeak(owner: R, action: (owner: R, value: T) -> Unit)","description":"xyz.xenondevs.commons.provider.Provider.subscribeWeak","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/subscribe-weak.html","searchKeys":["subscribeWeak","abstract fun <R : Any> subscribeWeak(owner: R, action: (owner: R, value: T) -> Unit)","xyz.xenondevs.commons.provider.Provider.subscribeWeak"]},{"name":"abstract fun <R : Any> unobserveWeak(owner: R)","description":"xyz.xenondevs.commons.provider.Provider.unobserveWeak","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/unobserve-weak.html","searchKeys":["unobserveWeak","abstract fun <R : Any> unobserveWeak(owner: R)","xyz.xenondevs.commons.provider.Provider.unobserveWeak"]},{"name":"abstract fun <R : Any> unobserveWeak(owner: R, action: (R) -> Unit)","description":"xyz.xenondevs.commons.provider.Provider.unobserveWeak","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/unobserve-weak.html","searchKeys":["unobserveWeak","abstract fun <R : Any> unobserveWeak(owner: R, action: (R) -> Unit)","xyz.xenondevs.commons.provider.Provider.unobserveWeak"]},{"name":"abstract fun <R : Any> unsubscribeWeak(owner: R)","description":"xyz.xenondevs.commons.provider.Provider.unsubscribeWeak","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/unsubscribe-weak.html","searchKeys":["unsubscribeWeak","abstract fun <R : Any> unsubscribeWeak(owner: R)","xyz.xenondevs.commons.provider.Provider.unsubscribeWeak"]},{"name":"abstract fun <R : Any> unsubscribeWeak(owner: R, action: (R, T) -> Unit)","description":"xyz.xenondevs.commons.provider.Provider.unsubscribeWeak","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/unsubscribe-weak.html","searchKeys":["unsubscribeWeak","abstract fun <R : Any> unsubscribeWeak(owner: R, action: (R, T) -> Unit)","xyz.xenondevs.commons.provider.Provider.unsubscribeWeak"]},{"name":"abstract fun <R> flatMap(transform: (T) -> Provider<R>): Provider<R>","description":"xyz.xenondevs.commons.provider.Provider.flatMap","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/flat-map.html","searchKeys":["flatMap","abstract fun <R> flatMap(transform: (T) -> Provider<R>): Provider<R>","xyz.xenondevs.commons.provider.Provider.flatMap"]},{"name":"abstract fun <R> flatMapMutable(transform: (T) -> MutableProvider<R>): MutableProvider<R>","description":"xyz.xenondevs.commons.provider.Provider.flatMapMutable","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/flat-map-mutable.html","searchKeys":["flatMapMutable","abstract fun <R> flatMapMutable(transform: (T) -> MutableProvider<R>): MutableProvider<R>","xyz.xenondevs.commons.provider.Provider.flatMapMutable"]},{"name":"abstract fun <R> immediateFlatMap(transform: (T) -> Provider<R>): Provider<R>","description":"xyz.xenondevs.commons.provider.Provider.immediateFlatMap","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/immediate-flat-map.html","searchKeys":["immediateFlatMap","abstract fun <R> immediateFlatMap(transform: (T) -> Provider<R>): Provider<R>","xyz.xenondevs.commons.provider.Provider.immediateFlatMap"]},{"name":"abstract fun <R> immediateFlatMapMutable(transform: (T) -> MutableProvider<R>): MutableProvider<R>","description":"xyz.xenondevs.commons.provider.Provider.immediateFlatMapMutable","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/immediate-flat-map-mutable.html","searchKeys":["immediateFlatMapMutable","abstract fun <R> immediateFlatMapMutable(transform: (T) -> MutableProvider<R>): MutableProvider<R>","xyz.xenondevs.commons.provider.Provider.immediateFlatMapMutable"]},{"name":"abstract fun <R> map(transform: (T) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.Provider.map","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/map.html","searchKeys":["map","abstract fun <R> map(transform: (T) -> R): Provider<R>","xyz.xenondevs.commons.provider.Provider.map"]},{"name":"abstract fun <R> map(transform: (T) -> R, untransform: (R) -> T): MutableProvider<R>","description":"xyz.xenondevs.commons.provider.MutableProvider.map","location":"commons-provider/xyz.xenondevs.commons.provider/-mutable-provider/map.html","searchKeys":["map","abstract fun <R> map(transform: (T) -> R, untransform: (R) -> T): MutableProvider<R>","xyz.xenondevs.commons.provider.MutableProvider.map"]},{"name":"abstract fun <R> mapObserved(createObservable: (value: T, updateHandler: () -> Unit) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.MutableProvider.mapObserved","location":"commons-provider/xyz.xenondevs.commons.provider/-mutable-provider/map-observed.html","searchKeys":["mapObserved","abstract fun <R> mapObserved(createObservable: (value: T, updateHandler: () -> Unit) -> R): Provider<R>","xyz.xenondevs.commons.provider.MutableProvider.mapObserved"]},{"name":"abstract fun <R> strongFlatMap(transform: (T) -> Provider<R>): Provider<R>","description":"xyz.xenondevs.commons.provider.Provider.strongFlatMap","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/strong-flat-map.html","searchKeys":["strongFlatMap","abstract fun <R> strongFlatMap(transform: (T) -> Provider<R>): Provider<R>","xyz.xenondevs.commons.provider.Provider.strongFlatMap"]},{"name":"abstract fun <R> strongFlatMapMutable(transform: (T) -> MutableProvider<R>): MutableProvider<R>","description":"xyz.xenondevs.commons.provider.Provider.strongFlatMapMutable","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/strong-flat-map-mutable.html","searchKeys":["strongFlatMapMutable","abstract fun <R> strongFlatMapMutable(transform: (T) -> MutableProvider<R>): MutableProvider<R>","xyz.xenondevs.commons.provider.Provider.strongFlatMapMutable"]},{"name":"abstract fun <R> strongImmediateFlatMap(transform: (T) -> Provider<R>): Provider<R>","description":"xyz.xenondevs.commons.provider.Provider.strongImmediateFlatMap","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/strong-immediate-flat-map.html","searchKeys":["strongImmediateFlatMap","abstract fun <R> strongImmediateFlatMap(transform: (T) -> Provider<R>): Provider<R>","xyz.xenondevs.commons.provider.Provider.strongImmediateFlatMap"]},{"name":"abstract fun <R> strongImmediateFlatMapMutable(transform: (T) -> MutableProvider<R>): MutableProvider<R>","description":"xyz.xenondevs.commons.provider.Provider.strongImmediateFlatMapMutable","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/strong-immediate-flat-map-mutable.html","searchKeys":["strongImmediateFlatMapMutable","abstract fun <R> strongImmediateFlatMapMutable(transform: (T) -> MutableProvider<R>): MutableProvider<R>","xyz.xenondevs.commons.provider.Provider.strongImmediateFlatMapMutable"]},{"name":"abstract fun <R> strongMap(transform: (T) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.Provider.strongMap","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/strong-map.html","searchKeys":["strongMap","abstract fun <R> strongMap(transform: (T) -> R): Provider<R>","xyz.xenondevs.commons.provider.Provider.strongMap"]},{"name":"abstract fun <R> strongMap(transform: (T) -> R, untransform: (R) -> T): MutableProvider<R>","description":"xyz.xenondevs.commons.provider.MutableProvider.strongMap","location":"commons-provider/xyz.xenondevs.commons.provider/-mutable-provider/strong-map.html","searchKeys":["strongMap","abstract fun <R> strongMap(transform: (T) -> R, untransform: (R) -> T): MutableProvider<R>","xyz.xenondevs.commons.provider.MutableProvider.strongMap"]},{"name":"abstract fun <R> strongMapObserved(createObservable: (value: T, updateHandler: () -> Unit) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.MutableProvider.strongMapObserved","location":"commons-provider/xyz.xenondevs.commons.provider/-mutable-provider/strong-map-observed.html","searchKeys":["strongMapObserved","abstract fun <R> strongMapObserved(createObservable: (value: T, updateHandler: () -> Unit) -> R): Provider<R>","xyz.xenondevs.commons.provider.MutableProvider.strongMapObserved"]},{"name":"abstract fun addStrongChild(child: Provider<*>)","description":"xyz.xenondevs.commons.provider.Provider.addStrongChild","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/add-strong-child.html","searchKeys":["addStrongChild","abstract fun addStrongChild(child: Provider<*>)","xyz.xenondevs.commons.provider.Provider.addStrongChild"]},{"name":"abstract fun addWeakChild(child: Provider<*>)","description":"xyz.xenondevs.commons.provider.Provider.addWeakChild","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/add-weak-child.html","searchKeys":["addWeakChild","abstract fun addWeakChild(child: Provider<*>)","xyz.xenondevs.commons.provider.Provider.addWeakChild"]},{"name":"abstract fun handleParentUpdated(updatedParent: Provider<*>)","description":"xyz.xenondevs.commons.provider.Provider.handleParentUpdated","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/handle-parent-updated.html","searchKeys":["handleParentUpdated","abstract fun handleParentUpdated(updatedParent: Provider<*>)","xyz.xenondevs.commons.provider.Provider.handleParentUpdated"]},{"name":"abstract fun observe(action: () -> Unit)","description":"xyz.xenondevs.commons.provider.Provider.observe","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/observe.html","searchKeys":["observe","abstract fun observe(action: () -> Unit)","xyz.xenondevs.commons.provider.Provider.observe"]},{"name":"abstract fun removeStrongChild(child: Provider<*>)","description":"xyz.xenondevs.commons.provider.Provider.removeStrongChild","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/remove-strong-child.html","searchKeys":["removeStrongChild","abstract fun removeStrongChild(child: Provider<*>)","xyz.xenondevs.commons.provider.Provider.removeStrongChild"]},{"name":"abstract fun removeWeakChild(child: Provider<*>)","description":"xyz.xenondevs.commons.provider.Provider.removeWeakChild","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/remove-weak-child.html","searchKeys":["removeWeakChild","abstract fun removeWeakChild(child: Provider<*>)","xyz.xenondevs.commons.provider.Provider.removeWeakChild"]},{"name":"abstract fun subscribe(action: (value: T) -> Unit)","description":"xyz.xenondevs.commons.provider.Provider.subscribe","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/subscribe.html","searchKeys":["subscribe","abstract fun subscribe(action: (value: T) -> Unit)","xyz.xenondevs.commons.provider.Provider.subscribe"]},{"name":"abstract fun unobserve(action: () -> Unit)","description":"xyz.xenondevs.commons.provider.Provider.unobserve","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/unobserve.html","searchKeys":["unobserve","abstract fun unobserve(action: () -> Unit)","xyz.xenondevs.commons.provider.Provider.unobserve"]},{"name":"abstract fun unsubscribe(action: (T) -> Unit)","description":"xyz.xenondevs.commons.provider.Provider.unsubscribe","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/unsubscribe.html","searchKeys":["unsubscribe","abstract fun unsubscribe(action: (T) -> Unit)","xyz.xenondevs.commons.provider.Provider.unsubscribe"]},{"name":"abstract fun update(value: DeferredValue<T>, ignore: Set<Provider<*>> = emptySet()): Boolean","description":"xyz.xenondevs.commons.provider.MutableProvider.update","location":"commons-provider/xyz.xenondevs.commons.provider/-mutable-provider/update.html","searchKeys":["update","abstract fun update(value: DeferredValue<T>, ignore: Set<Provider<*>> = emptySet()): Boolean","xyz.xenondevs.commons.provider.MutableProvider.update"]},{"name":"abstract val children: Set<Provider<*>>","description":"xyz.xenondevs.commons.provider.Provider.children","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/children.html","searchKeys":["children","abstract val children: Set<Provider<*>>","xyz.xenondevs.commons.provider.Provider.children"]},{"name":"abstract val parents: Set<Provider<*>>","description":"xyz.xenondevs.commons.provider.Provider.parents","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/parents.html","searchKeys":["parents","abstract val parents: Set<Provider<*>>","xyz.xenondevs.commons.provider.Provider.parents"]},{"name":"abstract val seqNo: Long","description":"xyz.xenondevs.commons.provider.DeferredValue.seqNo","location":"commons-provider/xyz.xenondevs.commons.provider/-deferred-value/seq-no.html","searchKeys":["seqNo","abstract val seqNo: Long","xyz.xenondevs.commons.provider.DeferredValue.seqNo"]},{"name":"abstract val value: DeferredValue<T>","description":"xyz.xenondevs.commons.provider.Provider.value","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/value.html","searchKeys":["value","abstract val value: DeferredValue<T>","xyz.xenondevs.commons.provider.Provider.value"]},{"name":"abstract val value: T","description":"xyz.xenondevs.commons.provider.DeferredValue.value","location":"commons-provider/xyz.xenondevs.commons.provider/-deferred-value/value.html","searchKeys":["value","abstract val value: T","xyz.xenondevs.commons.provider.DeferredValue.value"]},{"name":"class Direct<T>(val value: T) : DeferredValue<T> ","description":"xyz.xenondevs.commons.provider.DeferredValue.Direct","location":"commons-provider/xyz.xenondevs.commons.provider/-deferred-value/-direct/index.html","searchKeys":["Direct","class Direct<T>(val value: T) : DeferredValue<T> ","xyz.xenondevs.commons.provider.DeferredValue.Direct"]},{"name":"class Lazy<T>(lazy: Lazy<T>) : DeferredValue<T> ","description":"xyz.xenondevs.commons.provider.DeferredValue.Lazy","location":"commons-provider/xyz.xenondevs.commons.provider/-deferred-value/-lazy/index.html","searchKeys":["Lazy","class Lazy<T>(lazy: Lazy<T>) : DeferredValue<T> ","xyz.xenondevs.commons.provider.DeferredValue.Lazy"]},{"name":"class Mapped<P, T>(val parent: DeferredValue<P>, val transform: (P) -> T) : DeferredValue<T> ","description":"xyz.xenondevs.commons.provider.DeferredValue.Mapped","location":"commons-provider/xyz.xenondevs.commons.provider/-deferred-value/-mapped/index.html","searchKeys":["Mapped","class Mapped<P, T>(val parent: DeferredValue<P>, val transform: (P) -> T) : DeferredValue<T> ","xyz.xenondevs.commons.provider.DeferredValue.Mapped"]},{"name":"class MappedMulti<P, T>(val parents: List<DeferredValue<P>>, val transform: (List<P>) -> T) : DeferredValue<T> ","description":"xyz.xenondevs.commons.provider.DeferredValue.MappedMulti","location":"commons-provider/xyz.xenondevs.commons.provider/-deferred-value/-mapped-multi/index.html","searchKeys":["MappedMulti","class MappedMulti<P, T>(val parents: List<DeferredValue<P>>, val transform: (List<P>) -> T) : DeferredValue<T> ","xyz.xenondevs.commons.provider.DeferredValue.MappedMulti"]},{"name":"class ReEmitted<T>(val parent: DeferredValue<T>) : DeferredValue<T> ","description":"xyz.xenondevs.commons.provider.DeferredValue.ReEmitted","location":"commons-provider/xyz.xenondevs.commons.provider/-deferred-value/-re-emitted/index.html","searchKeys":["ReEmitted","class ReEmitted<T>(val parent: DeferredValue<T>) : DeferredValue<T> ","xyz.xenondevs.commons.provider.DeferredValue.ReEmitted"]},{"name":"class UpdateHandlerCollection<T>","description":"xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection","location":"commons-provider/xyz.xenondevs.commons.provider.impl/-update-handler-collection/index.html","searchKeys":["UpdateHandlerCollection","class UpdateHandlerCollection<T>","xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection"]},{"name":"constructor(initializer: () -> T)","description":"xyz.xenondevs.commons.provider.DeferredValue.Lazy.Lazy","location":"commons-provider/xyz.xenondevs.commons.provider/-deferred-value/-lazy/-lazy.html","searchKeys":["Lazy","constructor(initializer: () -> T)","xyz.xenondevs.commons.provider.DeferredValue.Lazy.Lazy"]},{"name":"constructor(lazy: Lazy<T>)","description":"xyz.xenondevs.commons.provider.DeferredValue.Lazy.Lazy","location":"commons-provider/xyz.xenondevs.commons.provider/-deferred-value/-lazy/-lazy.html","searchKeys":["Lazy","constructor(lazy: Lazy<T>)","xyz.xenondevs.commons.provider.DeferredValue.Lazy.Lazy"]},{"name":"constructor(parent: DeferredValue<P>, transform: (P) -> T)","description":"xyz.xenondevs.commons.provider.DeferredValue.Mapped.Mapped","location":"commons-provider/xyz.xenondevs.commons.provider/-deferred-value/-mapped/-mapped.html","searchKeys":["Mapped","constructor(parent: DeferredValue<P>, transform: (P) -> T)","xyz.xenondevs.commons.provider.DeferredValue.Mapped.Mapped"]},{"name":"constructor(parent: DeferredValue<T>)","description":"xyz.xenondevs.commons.provider.DeferredValue.ReEmitted.ReEmitted","location":"commons-provider/xyz.xenondevs.commons.provider/-deferred-value/-re-emitted/-re-emitted.html","searchKeys":["ReEmitted","constructor(parent: DeferredValue<T>)","xyz.xenondevs.commons.provider.DeferredValue.ReEmitted.ReEmitted"]},{"name":"constructor(parents: List<DeferredValue<P>>, transform: (List<P>) -> T)","description":"xyz.xenondevs.commons.provider.DeferredValue.MappedMulti.MappedMulti","location":"commons-provider/xyz.xenondevs.commons.provider/-deferred-value/-mapped-multi/-mapped-multi.html","searchKeys":["MappedMulti","constructor(parents: List<DeferredValue<P>>, transform: (List<P>) -> T)","xyz.xenondevs.commons.provider.DeferredValue.MappedMulti.MappedMulti"]},{"name":"constructor(value: T)","description":"xyz.xenondevs.commons.provider.DeferredValue.Direct.Direct","location":"commons-provider/xyz.xenondevs.commons.provider/-deferred-value/-direct/-direct.html","searchKeys":["Direct","constructor(value: T)","xyz.xenondevs.commons.provider.DeferredValue.Direct.Direct"]},{"name":"fun <A, B, C, D, E, F, G, H, I, J, R> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, i: Provider<I>, j: Provider<J>, mapValue: (A, B, C, D, E, F, G, H, I, J) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, C, D, E, F, G, H, I, J, R> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, i: Provider<I>, j: Provider<J>, mapValue: (A, B, C, D, E, F, G, H, I, J) -> R): Provider<R>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, C, D, E, F, G, H, I, J, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, i: Provider<I>, j: Provider<J>, mapValue: (A, B, C, D, E, F, G, H, I, J) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, C, D, E, F, G, H, I, J, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, i: Provider<I>, j: Provider<J>, mapValue: (A, B, C, D, E, F, G, H, I, J) -> R): Provider<R>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B, C, D, E, F, G, H, I, J> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, i: Provider<I>, j: Provider<J>): Provider<Tuple10<A, B, C, D, E, F, G, H, I, J>>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, C, D, E, F, G, H, I, J> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, i: Provider<I>, j: Provider<J>): Provider<Tuple10<A, B, C, D, E, F, G, H, I, J>>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, C, D, E, F, G, H, I, J> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, i: Provider<I>, j: Provider<J>): Provider<Tuple10<A, B, C, D, E, F, G, H, I, J>>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, C, D, E, F, G, H, I, J> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, i: Provider<I>, j: Provider<J>): Provider<Tuple10<A, B, C, D, E, F, G, H, I, J>>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B, C, D, E, F, G, H, I, R> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, i: Provider<I>, mapValue: (A, B, C, D, E, F, G, H, I) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, C, D, E, F, G, H, I, R> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, i: Provider<I>, mapValue: (A, B, C, D, E, F, G, H, I) -> R): Provider<R>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, C, D, E, F, G, H, I, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, i: Provider<I>, mapValue: (A, B, C, D, E, F, G, H, I) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, C, D, E, F, G, H, I, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, i: Provider<I>, mapValue: (A, B, C, D, E, F, G, H, I) -> R): Provider<R>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B, C, D, E, F, G, H, I> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, i: Provider<I>): Provider<Tuple9<A, B, C, D, E, F, G, H, I>>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, C, D, E, F, G, H, I> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, i: Provider<I>): Provider<Tuple9<A, B, C, D, E, F, G, H, I>>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, C, D, E, F, G, H, I> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, i: Provider<I>): Provider<Tuple9<A, B, C, D, E, F, G, H, I>>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, C, D, E, F, G, H, I> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, i: Provider<I>): Provider<Tuple9<A, B, C, D, E, F, G, H, I>>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B, C, D, E, F, G, H, R> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, mapValue: (A, B, C, D, E, F, G, H) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, C, D, E, F, G, H, R> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, mapValue: (A, B, C, D, E, F, G, H) -> R): Provider<R>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, C, D, E, F, G, H, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, mapValue: (A, B, C, D, E, F, G, H) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, C, D, E, F, G, H, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>, mapValue: (A, B, C, D, E, F, G, H) -> R): Provider<R>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B, C, D, E, F, G, H> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>): Provider<Tuple8<A, B, C, D, E, F, G, H>>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, C, D, E, F, G, H> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>): Provider<Tuple8<A, B, C, D, E, F, G, H>>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, C, D, E, F, G, H> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>): Provider<Tuple8<A, B, C, D, E, F, G, H>>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, C, D, E, F, G, H> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, h: Provider<H>): Provider<Tuple8<A, B, C, D, E, F, G, H>>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B, C, D, E, F, G, R> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, mapValue: (A, B, C, D, E, F, G) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, C, D, E, F, G, R> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, mapValue: (A, B, C, D, E, F, G) -> R): Provider<R>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, C, D, E, F, G, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, mapValue: (A, B, C, D, E, F, G) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, C, D, E, F, G, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>, mapValue: (A, B, C, D, E, F, G) -> R): Provider<R>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B, C, D, E, F, G> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>): Provider<Tuple7<A, B, C, D, E, F, G>>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, C, D, E, F, G> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>): Provider<Tuple7<A, B, C, D, E, F, G>>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, C, D, E, F, G> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>): Provider<Tuple7<A, B, C, D, E, F, G>>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, C, D, E, F, G> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, g: Provider<G>): Provider<Tuple7<A, B, C, D, E, F, G>>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B, C, D, E, F, R> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, mapValue: (A, B, C, D, E, F) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, C, D, E, F, R> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, mapValue: (A, B, C, D, E, F) -> R): Provider<R>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, C, D, E, F, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, mapValue: (A, B, C, D, E, F) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, C, D, E, F, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>, mapValue: (A, B, C, D, E, F) -> R): Provider<R>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B, C, D, E, F> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>): Provider<Tuple6<A, B, C, D, E, F>>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, C, D, E, F> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>): Provider<Tuple6<A, B, C, D, E, F>>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, C, D, E, F> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>): Provider<Tuple6<A, B, C, D, E, F>>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, C, D, E, F> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, f: Provider<F>): Provider<Tuple6<A, B, C, D, E, F>>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B, C, D, E, R> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, mapValue: (A, B, C, D, E) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, C, D, E, R> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, mapValue: (A, B, C, D, E) -> R): Provider<R>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, C, D, E, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, mapValue: (A, B, C, D, E) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, C, D, E, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>, mapValue: (A, B, C, D, E) -> R): Provider<R>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B, C, D, E> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>): Provider<Tuple5<A, B, C, D, E>>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, C, D, E> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>): Provider<Tuple5<A, B, C, D, E>>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, C, D, E> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>): Provider<Tuple5<A, B, C, D, E>>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, C, D, E> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, e: Provider<E>): Provider<Tuple5<A, B, C, D, E>>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B, C, D, R> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, mapValue: (A, B, C, D) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, C, D, R> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, mapValue: (A, B, C, D) -> R): Provider<R>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, C, D, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, mapValue: (A, B, C, D) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, C, D, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>, mapValue: (A, B, C, D) -> R): Provider<R>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B, C, D> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>): Provider<Tuple4<A, B, C, D>>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, C, D> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>): Provider<Tuple4<A, B, C, D>>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, C, D> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>): Provider<Tuple4<A, B, C, D>>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, C, D> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, d: Provider<D>): Provider<Tuple4<A, B, C, D>>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B, C, R> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, mapValue: (A, B, C) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, C, R> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, mapValue: (A, B, C) -> R): Provider<R>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, C, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, mapValue: (A, B, C) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, C, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>, mapValue: (A, B, C) -> R): Provider<R>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B, C> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>): Provider<Tuple3<A, B, C>>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, C> combinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>): Provider<Tuple3<A, B, C>>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, C> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>): Provider<Tuple3<A, B, C>>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, C> strongCombinedProvider(a: Provider<A>, b: Provider<B>, c: Provider<C>): Provider<Tuple3<A, B, C>>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B, R> combinedProvider(a: Provider<A>, b: Provider<B>, mapValue: (A, B) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B, R> combinedProvider(a: Provider<A>, b: Provider<B>, mapValue: (A, B) -> R): Provider<R>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, mapValue: (A, B) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B, R> strongCombinedProvider(a: Provider<A>, b: Provider<B>, mapValue: (A, B) -> R): Provider<R>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <A, B> combinedProvider(a: Provider<A>, b: Provider<B>): Provider<Tuple2<A, B>>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <A, B> combinedProvider(a: Provider<A>, b: Provider<B>): Provider<Tuple2<A, B>>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <A, B> strongCombinedProvider(a: Provider<A>, b: Provider<B>): Provider<Tuple2<A, B>>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <A, B> strongCombinedProvider(a: Provider<A>, b: Provider<B>): Provider<Tuple2<A, B>>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <E> MutableProvider<out MutableList<E>>.observed(): Provider<MutableList<E>>","description":"xyz.xenondevs.commons.provider.observed","location":"commons-provider/xyz.xenondevs.commons.provider/observed.html","searchKeys":["observed","fun <E> MutableProvider<out MutableList<E>>.observed(): Provider<MutableList<E>>","xyz.xenondevs.commons.provider.observed"]},{"name":"fun <E> MutableProvider<out MutableList<E>>.strongObserved(): Provider<MutableList<E>>","description":"xyz.xenondevs.commons.provider.strongObserved","location":"commons-provider/xyz.xenondevs.commons.provider/strong-observed.html","searchKeys":["strongObserved","fun <E> MutableProvider<out MutableList<E>>.strongObserved(): Provider<MutableList<E>>","xyz.xenondevs.commons.provider.strongObserved"]},{"name":"fun <E> MutableProvider<out MutableSet<E>>.observed(): Provider<MutableSet<E>>","description":"xyz.xenondevs.commons.provider.observed","location":"commons-provider/xyz.xenondevs.commons.provider/observed.html","searchKeys":["observed","fun <E> MutableProvider<out MutableSet<E>>.observed(): Provider<MutableSet<E>>","xyz.xenondevs.commons.provider.observed"]},{"name":"fun <E> MutableProvider<out MutableSet<E>>.strongObserved(): Provider<MutableSet<E>>","description":"xyz.xenondevs.commons.provider.strongObserved","location":"commons-provider/xyz.xenondevs.commons.provider/strong-observed.html","searchKeys":["strongObserved","fun <E> MutableProvider<out MutableSet<E>>.strongObserved(): Provider<MutableSet<E>>","xyz.xenondevs.commons.provider.strongObserved"]},{"name":"fun <K, V, M : MutableMap<in K, in V>> Provider<List<Map<K, V>>>.mergeMapsTo(makeMap: (size: Int) -> M): Provider<M>","description":"xyz.xenondevs.commons.provider.mergeMapsTo","location":"commons-provider/xyz.xenondevs.commons.provider/merge-maps-to.html","searchKeys":["mergeMapsTo","fun <K, V, M : MutableMap<in K, in V>> Provider<List<Map<K, V>>>.mergeMapsTo(makeMap: (size: Int) -> M): Provider<M>","xyz.xenondevs.commons.provider.mergeMapsTo"]},{"name":"fun <K, V, M : MutableMap<in K, in V>> Provider<List<Map<K, V>>>.strongMergeMapsTo(makeMap: (size: Int) -> M): Provider<M>","description":"xyz.xenondevs.commons.provider.strongMergeMapsTo","location":"commons-provider/xyz.xenondevs.commons.provider/strong-merge-maps-to.html","searchKeys":["strongMergeMapsTo","fun <K, V, M : MutableMap<in K, in V>> Provider<List<Map<K, V>>>.strongMergeMapsTo(makeMap: (size: Int) -> M): Provider<M>","xyz.xenondevs.commons.provider.strongMergeMapsTo"]},{"name":"fun <K, V> MutableProvider<out MutableMap<K, V>>.observed(): Provider<MutableMap<K, V>>","description":"xyz.xenondevs.commons.provider.observed","location":"commons-provider/xyz.xenondevs.commons.provider/observed.html","searchKeys":["observed","fun <K, V> MutableProvider<out MutableMap<K, V>>.observed(): Provider<MutableMap<K, V>>","xyz.xenondevs.commons.provider.observed"]},{"name":"fun <K, V> MutableProvider<out MutableMap<K, V>>.strongObserved(): Provider<MutableMap<K, V>>","description":"xyz.xenondevs.commons.provider.strongObserved","location":"commons-provider/xyz.xenondevs.commons.provider/strong-observed.html","searchKeys":["strongObserved","fun <K, V> MutableProvider<out MutableMap<K, V>>.strongObserved(): Provider<MutableMap<K, V>>","xyz.xenondevs.commons.provider.strongObserved"]},{"name":"fun <K, V> Provider<List<Map<K, V>>>.mergeMaps(): Provider<Map<K, V>>","description":"xyz.xenondevs.commons.provider.mergeMaps","location":"commons-provider/xyz.xenondevs.commons.provider/merge-maps.html","searchKeys":["mergeMaps","fun <K, V> Provider<List<Map<K, V>>>.mergeMaps(): Provider<Map<K, V>>","xyz.xenondevs.commons.provider.mergeMaps"]},{"name":"fun <K, V> Provider<List<Map<K, V>>>.strongMergeMaps(): Provider<Map<K, V>>","description":"xyz.xenondevs.commons.provider.strongMergeMaps","location":"commons-provider/xyz.xenondevs.commons.provider/strong-merge-maps.html","searchKeys":["strongMergeMaps","fun <K, V> Provider<List<Map<K, V>>>.strongMergeMaps(): Provider<Map<K, V>>","xyz.xenondevs.commons.provider.strongMergeMaps"]},{"name":"fun <K> weakHashSet(initialCapacity: Int): MutableSet<K>","description":"xyz.xenondevs.commons.provider.util.weakHashSet","location":"commons-provider/xyz.xenondevs.commons.provider.util/weak-hash-set.html","searchKeys":["weakHashSet","fun <K> weakHashSet(initialCapacity: Int): MutableSet<K>","xyz.xenondevs.commons.provider.util.weakHashSet"]},{"name":"fun <O : Any> withWeakObserver(owner: O, observer: (O) -> Unit): UpdateHandlerCollection<T>","description":"xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.withWeakObserver","location":"commons-provider/xyz.xenondevs.commons.provider.impl/-update-handler-collection/with-weak-observer.html","searchKeys":["withWeakObserver","fun <O : Any> withWeakObserver(owner: O, observer: (O) -> Unit): UpdateHandlerCollection<T>","xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.withWeakObserver"]},{"name":"fun <O : Any> withWeakSubscriber(owner: O, subscriber: (O, T) -> Unit): UpdateHandlerCollection<T>","description":"xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.withWeakSubscriber","location":"commons-provider/xyz.xenondevs.commons.provider.impl/-update-handler-collection/with-weak-subscriber.html","searchKeys":["withWeakSubscriber","fun <O : Any> withWeakSubscriber(owner: O, subscriber: (O, T) -> Unit): UpdateHandlerCollection<T>","xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.withWeakSubscriber"]},{"name":"fun <O : Any> withoutWeakObserver(owner: O, observer: (O) -> Unit): UpdateHandlerCollection<T>","description":"xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.withoutWeakObserver","location":"commons-provider/xyz.xenondevs.commons.provider.impl/-update-handler-collection/without-weak-observer.html","searchKeys":["withoutWeakObserver","fun <O : Any> withoutWeakObserver(owner: O, observer: (O) -> Unit): UpdateHandlerCollection<T>","xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.withoutWeakObserver"]},{"name":"fun <O : Any> withoutWeakSubscriber(owner: O, subscriber: (O, T) -> Unit): UpdateHandlerCollection<T>","description":"xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.withoutWeakSubscriber","location":"commons-provider/xyz.xenondevs.commons.provider.impl/-update-handler-collection/without-weak-subscriber.html","searchKeys":["withoutWeakSubscriber","fun <O : Any> withoutWeakSubscriber(owner: O, subscriber: (O, T) -> Unit): UpdateHandlerCollection<T>","xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.withoutWeakSubscriber"]},{"name":"fun <R> Provider<MutableProvider<R>>.flatten(): MutableProvider<R>","description":"xyz.xenondevs.commons.provider.flatten","location":"commons-provider/xyz.xenondevs.commons.provider/flatten.html","searchKeys":["flatten","fun <R> Provider<MutableProvider<R>>.flatten(): MutableProvider<R>","xyz.xenondevs.commons.provider.flatten"]},{"name":"fun <R> Provider<MutableProvider<R>>.immediateFlatten(): MutableProvider<R>","description":"xyz.xenondevs.commons.provider.immediateFlatten","location":"commons-provider/xyz.xenondevs.commons.provider/immediate-flatten.html","searchKeys":["immediateFlatten","fun <R> Provider<MutableProvider<R>>.immediateFlatten(): MutableProvider<R>","xyz.xenondevs.commons.provider.immediateFlatten"]},{"name":"fun <R> Provider<MutableProvider<R>>.strongFlatten(): MutableProvider<R>","description":"xyz.xenondevs.commons.provider.strongFlatten","location":"commons-provider/xyz.xenondevs.commons.provider/strong-flatten.html","searchKeys":["strongFlatten","fun <R> Provider<MutableProvider<R>>.strongFlatten(): MutableProvider<R>","xyz.xenondevs.commons.provider.strongFlatten"]},{"name":"fun <R> Provider<MutableProvider<R>>.strongImmediateFlatten(): MutableProvider<R>","description":"xyz.xenondevs.commons.provider.strongImmediateFlatten","location":"commons-provider/xyz.xenondevs.commons.provider/strong-immediate-flatten.html","searchKeys":["strongImmediateFlatten","fun <R> Provider<MutableProvider<R>>.strongImmediateFlatten(): MutableProvider<R>","xyz.xenondevs.commons.provider.strongImmediateFlatten"]},{"name":"fun <R> Provider<Provider<R>>.flatten(): Provider<R>","description":"xyz.xenondevs.commons.provider.flatten","location":"commons-provider/xyz.xenondevs.commons.provider/flatten.html","searchKeys":["flatten","fun <R> Provider<Provider<R>>.flatten(): Provider<R>","xyz.xenondevs.commons.provider.flatten"]},{"name":"fun <R> Provider<Provider<R>>.immediateFlatten(): Provider<R>","description":"xyz.xenondevs.commons.provider.immediateFlatten","location":"commons-provider/xyz.xenondevs.commons.provider/immediate-flatten.html","searchKeys":["immediateFlatten","fun <R> Provider<Provider<R>>.immediateFlatten(): Provider<R>","xyz.xenondevs.commons.provider.immediateFlatten"]},{"name":"fun <R> Provider<Provider<R>>.strongFlatten(): Provider<R>","description":"xyz.xenondevs.commons.provider.strongFlatten","location":"commons-provider/xyz.xenondevs.commons.provider/strong-flatten.html","searchKeys":["strongFlatten","fun <R> Provider<Provider<R>>.strongFlatten(): Provider<R>","xyz.xenondevs.commons.provider.strongFlatten"]},{"name":"fun <R> Provider<Provider<R>>.strongImmediateFlatten(): Provider<R>","description":"xyz.xenondevs.commons.provider.strongImmediateFlatten","location":"commons-provider/xyz.xenondevs.commons.provider/strong-immediate-flatten.html","searchKeys":["strongImmediateFlatten","fun <R> Provider<Provider<R>>.strongImmediateFlatten(): Provider<R>","xyz.xenondevs.commons.provider.strongImmediateFlatten"]},{"name":"fun <T : Any> MutableProvider<T?>.orElseLazily(lazyValue: () -> T): MutableProvider<T>","description":"xyz.xenondevs.commons.provider.orElseLazily","location":"commons-provider/xyz.xenondevs.commons.provider/or-else-lazily.html","searchKeys":["orElseLazily","fun <T : Any> MutableProvider<T?>.orElseLazily(lazyValue: () -> T): MutableProvider<T>","xyz.xenondevs.commons.provider.orElseLazily"]},{"name":"fun <T : Any> MutableProvider<T?>.strongOrElseLazily(lazyValue: () -> T): MutableProvider<T>","description":"xyz.xenondevs.commons.provider.strongOrElseLazily","location":"commons-provider/xyz.xenondevs.commons.provider/strong-or-else-lazily.html","searchKeys":["strongOrElseLazily","fun <T : Any> MutableProvider<T?>.strongOrElseLazily(lazyValue: () -> T): MutableProvider<T>","xyz.xenondevs.commons.provider.strongOrElseLazily"]},{"name":"fun <T : Any> Provider<T?>.requireNotNull(message: String = \"Required value was null.\"): Provider<T>","description":"xyz.xenondevs.commons.provider.requireNotNull","location":"commons-provider/xyz.xenondevs.commons.provider/require-not-null.html","searchKeys":["requireNotNull","fun <T : Any> Provider<T?>.requireNotNull(message: String = \"Required value was null.\"): Provider<T>","xyz.xenondevs.commons.provider.requireNotNull"]},{"name":"fun <T : Any> Provider<T?>.strongRequireNotNull(message: String = \"Required value was null.\"): Provider<T>","description":"xyz.xenondevs.commons.provider.strongRequireNotNull","location":"commons-provider/xyz.xenondevs.commons.provider/strong-require-not-null.html","searchKeys":["strongRequireNotNull","fun <T : Any> Provider<T?>.strongRequireNotNull(message: String = \"Required value was null.\"): Provider<T>","xyz.xenondevs.commons.provider.strongRequireNotNull"]},{"name":"fun <T, R> combinedProvider(providers: List<Provider<T>>, mapValue: (List<T>) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <T, R> combinedProvider(providers: List<Provider<T>>, mapValue: (List<T>) -> R): Provider<R>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <T, R> strongCombinedProvider(providers: List<Provider<T>>, mapValue: (List<T>) -> R): Provider<R>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <T, R> strongCombinedProvider(providers: List<Provider<T>>, mapValue: (List<T>) -> R): Provider<R>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun <T> MutableProvider<T?>.orElse(value: T): MutableProvider<T>","description":"xyz.xenondevs.commons.provider.orElse","location":"commons-provider/xyz.xenondevs.commons.provider/or-else.html","searchKeys":["orElse","fun <T> MutableProvider<T?>.orElse(value: T): MutableProvider<T>","xyz.xenondevs.commons.provider.orElse"]},{"name":"fun <T> MutableProvider<T?>.orElseNew(newValue: () -> T): MutableProvider<T>","description":"xyz.xenondevs.commons.provider.orElseNew","location":"commons-provider/xyz.xenondevs.commons.provider/or-else-new.html","searchKeys":["orElseNew","fun <T> MutableProvider<T?>.orElseNew(newValue: () -> T): MutableProvider<T>","xyz.xenondevs.commons.provider.orElseNew"]},{"name":"fun <T> MutableProvider<T?>.strongOrElse(value: T): MutableProvider<T>","description":"xyz.xenondevs.commons.provider.strongOrElse","location":"commons-provider/xyz.xenondevs.commons.provider/strong-or-else.html","searchKeys":["strongOrElse","fun <T> MutableProvider<T?>.strongOrElse(value: T): MutableProvider<T>","xyz.xenondevs.commons.provider.strongOrElse"]},{"name":"fun <T> MutableProvider<T?>.strongOrElseNew(newValue: () -> T): MutableProvider<T>","description":"xyz.xenondevs.commons.provider.strongOrElseNew","location":"commons-provider/xyz.xenondevs.commons.provider/strong-or-else-new.html","searchKeys":["strongOrElseNew","fun <T> MutableProvider<T?>.strongOrElseNew(newValue: () -> T): MutableProvider<T>","xyz.xenondevs.commons.provider.strongOrElseNew"]},{"name":"fun <T> Provider<Array<T>>.getCoerced(index: Int): Provider<T>","description":"xyz.xenondevs.commons.provider.getCoerced","location":"commons-provider/xyz.xenondevs.commons.provider/get-coerced.html","searchKeys":["getCoerced","fun <T> Provider<Array<T>>.getCoerced(index: Int): Provider<T>","xyz.xenondevs.commons.provider.getCoerced"]},{"name":"fun <T> Provider<Array<T>>.getCoerced(index: Provider<Int>): Provider<T>","description":"xyz.xenondevs.commons.provider.getCoerced","location":"commons-provider/xyz.xenondevs.commons.provider/get-coerced.html","searchKeys":["getCoerced","fun <T> Provider<Array<T>>.getCoerced(index: Provider<Int>): Provider<T>","xyz.xenondevs.commons.provider.getCoerced"]},{"name":"fun <T> Provider<Array<T>>.getMod(index: Int): Provider<T>","description":"xyz.xenondevs.commons.provider.getMod","location":"commons-provider/xyz.xenondevs.commons.provider/get-mod.html","searchKeys":["getMod","fun <T> Provider<Array<T>>.getMod(index: Int): Provider<T>","xyz.xenondevs.commons.provider.getMod"]},{"name":"fun <T> Provider<Array<T>>.getMod(index: Provider<Int>): Provider<T>","description":"xyz.xenondevs.commons.provider.getMod","location":"commons-provider/xyz.xenondevs.commons.provider/get-mod.html","searchKeys":["getMod","fun <T> Provider<Array<T>>.getMod(index: Provider<Int>): Provider<T>","xyz.xenondevs.commons.provider.getMod"]},{"name":"fun <T> Provider<Array<T>>.getOrNull(index: Int): Provider<T?>","description":"xyz.xenondevs.commons.provider.getOrNull","location":"commons-provider/xyz.xenondevs.commons.provider/get-or-null.html","searchKeys":["getOrNull","fun <T> Provider<Array<T>>.getOrNull(index: Int): Provider<T?>","xyz.xenondevs.commons.provider.getOrNull"]},{"name":"fun <T> Provider<Array<T>>.getOrNull(index: Provider<Int>): Provider<Unit>","description":"xyz.xenondevs.commons.provider.getOrNull","location":"commons-provider/xyz.xenondevs.commons.provider/get-or-null.html","searchKeys":["getOrNull","fun <T> Provider<Array<T>>.getOrNull(index: Provider<Int>): Provider<Unit>","xyz.xenondevs.commons.provider.getOrNull"]},{"name":"fun <T> Provider<Array<T>>.strongGet(index: Int): Provider<T>","description":"xyz.xenondevs.commons.provider.strongGet","location":"commons-provider/xyz.xenondevs.commons.provider/strong-get.html","searchKeys":["strongGet","fun <T> Provider<Array<T>>.strongGet(index: Int): Provider<T>","xyz.xenondevs.commons.provider.strongGet"]},{"name":"fun <T> Provider<Array<T>>.strongGet(index: Provider<Int>): Provider<T>","description":"xyz.xenondevs.commons.provider.strongGet","location":"commons-provider/xyz.xenondevs.commons.provider/strong-get.html","searchKeys":["strongGet","fun <T> Provider<Array<T>>.strongGet(index: Provider<Int>): Provider<T>","xyz.xenondevs.commons.provider.strongGet"]},{"name":"fun <T> Provider<Array<T>>.strongGetCoerced(index: Int): Provider<T>","description":"xyz.xenondevs.commons.provider.strongGetCoerced","location":"commons-provider/xyz.xenondevs.commons.provider/strong-get-coerced.html","searchKeys":["strongGetCoerced","fun <T> Provider<Array<T>>.strongGetCoerced(index: Int): Provider<T>","xyz.xenondevs.commons.provider.strongGetCoerced"]},{"name":"fun <T> Provider<Array<T>>.strongGetCoerced(index: Provider<Int>): Provider<T>","description":"xyz.xenondevs.commons.provider.strongGetCoerced","location":"commons-provider/xyz.xenondevs.commons.provider/strong-get-coerced.html","searchKeys":["strongGetCoerced","fun <T> Provider<Array<T>>.strongGetCoerced(index: Provider<Int>): Provider<T>","xyz.xenondevs.commons.provider.strongGetCoerced"]},{"name":"fun <T> Provider<Array<T>>.strongGetMod(index: Int): Provider<T>","description":"xyz.xenondevs.commons.provider.strongGetMod","location":"commons-provider/xyz.xenondevs.commons.provider/strong-get-mod.html","searchKeys":["strongGetMod","fun <T> Provider<Array<T>>.strongGetMod(index: Int): Provider<T>","xyz.xenondevs.commons.provider.strongGetMod"]},{"name":"fun <T> Provider<Array<T>>.strongGetMod(index: Provider<Int>): Provider<T>","description":"xyz.xenondevs.commons.provider.strongGetMod","location":"commons-provider/xyz.xenondevs.commons.provider/strong-get-mod.html","searchKeys":["strongGetMod","fun <T> Provider<Array<T>>.strongGetMod(index: Provider<Int>): Provider<T>","xyz.xenondevs.commons.provider.strongGetMod"]},{"name":"fun <T> Provider<Array<T>>.strongGetOrNull(index: Int): Provider<T?>","description":"xyz.xenondevs.commons.provider.strongGetOrNull","location":"commons-provider/xyz.xenondevs.commons.provider/strong-get-or-null.html","searchKeys":["strongGetOrNull","fun <T> Provider<Array<T>>.strongGetOrNull(index: Int): Provider<T?>","xyz.xenondevs.commons.provider.strongGetOrNull"]},{"name":"fun <T> Provider<Array<T>>.strongGetOrNull(index: Provider<Int>): Provider<Unit>","description":"xyz.xenondevs.commons.provider.strongGetOrNull","location":"commons-provider/xyz.xenondevs.commons.provider/strong-get-or-null.html","searchKeys":["strongGetOrNull","fun <T> Provider<Array<T>>.strongGetOrNull(index: Provider<Int>): Provider<Unit>","xyz.xenondevs.commons.provider.strongGetOrNull"]},{"name":"fun <T> Provider<Iterable<Iterable<T>>>.flattenIterables(): Provider<List<T>>","description":"xyz.xenondevs.commons.provider.flattenIterables","location":"commons-provider/xyz.xenondevs.commons.provider/flatten-iterables.html","searchKeys":["flattenIterables","fun <T> Provider<Iterable<Iterable<T>>>.flattenIterables(): Provider<List<T>>","xyz.xenondevs.commons.provider.flattenIterables"]},{"name":"fun <T> Provider<Iterable<Iterable<T>>>.strongFlattenIterables(): Provider<List<T>>","description":"xyz.xenondevs.commons.provider.strongFlattenIterables","location":"commons-provider/xyz.xenondevs.commons.provider/strong-flatten-iterables.html","searchKeys":["strongFlattenIterables","fun <T> Provider<Iterable<Iterable<T>>>.strongFlattenIterables(): Provider<List<T>>","xyz.xenondevs.commons.provider.strongFlattenIterables"]},{"name":"fun <T> Provider<List<T>>.getCoerced(index: Int): Provider<T>","description":"xyz.xenondevs.commons.provider.getCoerced","location":"commons-provider/xyz.xenondevs.commons.provider/get-coerced.html","searchKeys":["getCoerced","fun <T> Provider<List<T>>.getCoerced(index: Int): Provider<T>","xyz.xenondevs.commons.provider.getCoerced"]},{"name":"fun <T> Provider<List<T>>.getCoerced(index: Provider<Int>): Provider<T>","description":"xyz.xenondevs.commons.provider.getCoerced","location":"commons-provider/xyz.xenondevs.commons.provider/get-coerced.html","searchKeys":["getCoerced","fun <T> Provider<List<T>>.getCoerced(index: Provider<Int>): Provider<T>","xyz.xenondevs.commons.provider.getCoerced"]},{"name":"fun <T> Provider<List<T>>.getMod(index: Int): Provider<T>","description":"xyz.xenondevs.commons.provider.getMod","location":"commons-provider/xyz.xenondevs.commons.provider/get-mod.html","searchKeys":["getMod","fun <T> Provider<List<T>>.getMod(index: Int): Provider<T>","xyz.xenondevs.commons.provider.getMod"]},{"name":"fun <T> Provider<List<T>>.getMod(index: Provider<Int>): Provider<T>","description":"xyz.xenondevs.commons.provider.getMod","location":"commons-provider/xyz.xenondevs.commons.provider/get-mod.html","searchKeys":["getMod","fun <T> Provider<List<T>>.getMod(index: Provider<Int>): Provider<T>","xyz.xenondevs.commons.provider.getMod"]},{"name":"fun <T> Provider<List<T>>.getOrNull(index: Int): Provider<T?>","description":"xyz.xenondevs.commons.provider.getOrNull","location":"commons-provider/xyz.xenondevs.commons.provider/get-or-null.html","searchKeys":["getOrNull","fun <T> Provider<List<T>>.getOrNull(index: Int): Provider<T?>","xyz.xenondevs.commons.provider.getOrNull"]},{"name":"fun <T> Provider<List<T>>.getOrNull(index: Provider<Int>): Provider<Unit>","description":"xyz.xenondevs.commons.provider.getOrNull","location":"commons-provider/xyz.xenondevs.commons.provider/get-or-null.html","searchKeys":["getOrNull","fun <T> Provider<List<T>>.getOrNull(index: Provider<Int>): Provider<Unit>","xyz.xenondevs.commons.provider.getOrNull"]},{"name":"fun <T> Provider<List<T>>.strongGet(index: Int): Provider<T>","description":"xyz.xenondevs.commons.provider.strongGet","location":"commons-provider/xyz.xenondevs.commons.provider/strong-get.html","searchKeys":["strongGet","fun <T> Provider<List<T>>.strongGet(index: Int): Provider<T>","xyz.xenondevs.commons.provider.strongGet"]},{"name":"fun <T> Provider<List<T>>.strongGet(index: Provider<Int>): Provider<T>","description":"xyz.xenondevs.commons.provider.strongGet","location":"commons-provider/xyz.xenondevs.commons.provider/strong-get.html","searchKeys":["strongGet","fun <T> Provider<List<T>>.strongGet(index: Provider<Int>): Provider<T>","xyz.xenondevs.commons.provider.strongGet"]},{"name":"fun <T> Provider<List<T>>.strongGetCoerced(index: Int): Provider<T>","description":"xyz.xenondevs.commons.provider.strongGetCoerced","location":"commons-provider/xyz.xenondevs.commons.provider/strong-get-coerced.html","searchKeys":["strongGetCoerced","fun <T> Provider<List<T>>.strongGetCoerced(index: Int): Provider<T>","xyz.xenondevs.commons.provider.strongGetCoerced"]},{"name":"fun <T> Provider<List<T>>.strongGetCoerced(index: Provider<Int>): Provider<T>","description":"xyz.xenondevs.commons.provider.strongGetCoerced","location":"commons-provider/xyz.xenondevs.commons.provider/strong-get-coerced.html","searchKeys":["strongGetCoerced","fun <T> Provider<List<T>>.strongGetCoerced(index: Provider<Int>): Provider<T>","xyz.xenondevs.commons.provider.strongGetCoerced"]},{"name":"fun <T> Provider<List<T>>.strongGetMod(index: Int): Provider<T>","description":"xyz.xenondevs.commons.provider.strongGetMod","location":"commons-provider/xyz.xenondevs.commons.provider/strong-get-mod.html","searchKeys":["strongGetMod","fun <T> Provider<List<T>>.strongGetMod(index: Int): Provider<T>","xyz.xenondevs.commons.provider.strongGetMod"]},{"name":"fun <T> Provider<List<T>>.strongGetMod(index: Provider<Int>): Provider<T>","description":"xyz.xenondevs.commons.provider.strongGetMod","location":"commons-provider/xyz.xenondevs.commons.provider/strong-get-mod.html","searchKeys":["strongGetMod","fun <T> Provider<List<T>>.strongGetMod(index: Provider<Int>): Provider<T>","xyz.xenondevs.commons.provider.strongGetMod"]},{"name":"fun <T> Provider<List<T>>.strongGetOrNull(index: Int): Provider<T?>","description":"xyz.xenondevs.commons.provider.strongGetOrNull","location":"commons-provider/xyz.xenondevs.commons.provider/strong-get-or-null.html","searchKeys":["strongGetOrNull","fun <T> Provider<List<T>>.strongGetOrNull(index: Int): Provider<T?>","xyz.xenondevs.commons.provider.strongGetOrNull"]},{"name":"fun <T> Provider<List<T>>.strongGetOrNull(index: Provider<Int>): Provider<Unit>","description":"xyz.xenondevs.commons.provider.strongGetOrNull","location":"commons-provider/xyz.xenondevs.commons.provider/strong-get-or-null.html","searchKeys":["strongGetOrNull","fun <T> Provider<List<T>>.strongGetOrNull(index: Provider<Int>): Provider<Unit>","xyz.xenondevs.commons.provider.strongGetOrNull"]},{"name":"fun <T> Provider<T?>.orElse(provider: Provider<T>): Provider<T>","description":"xyz.xenondevs.commons.provider.orElse","location":"commons-provider/xyz.xenondevs.commons.provider/or-else.html","searchKeys":["orElse","fun <T> Provider<T?>.orElse(provider: Provider<T>): Provider<T>","xyz.xenondevs.commons.provider.orElse"]},{"name":"fun <T> Provider<T?>.orElse(provider: Provider<T>?): Provider<T?>","description":"xyz.xenondevs.commons.provider.orElse","location":"commons-provider/xyz.xenondevs.commons.provider/or-else.html","searchKeys":["orElse","fun <T> Provider<T?>.orElse(provider: Provider<T>?): Provider<T?>","xyz.xenondevs.commons.provider.orElse"]},{"name":"fun <T> Provider<T?>.orElse(value: T): Provider<T>","description":"xyz.xenondevs.commons.provider.orElse","location":"commons-provider/xyz.xenondevs.commons.provider/or-else.html","searchKeys":["orElse","fun <T> Provider<T?>.orElse(value: T): Provider<T>","xyz.xenondevs.commons.provider.orElse"]},{"name":"fun <T> Provider<T?>.orElseLazily(lazyValue: () -> T): Provider<T>","description":"xyz.xenondevs.commons.provider.orElseLazily","location":"commons-provider/xyz.xenondevs.commons.provider/or-else-lazily.html","searchKeys":["orElseLazily","fun <T> Provider<T?>.orElseLazily(lazyValue: () -> T): Provider<T>","xyz.xenondevs.commons.provider.orElseLazily"]},{"name":"fun <T> Provider<T?>.orElseNew(newValue: () -> T): Provider<T>","description":"xyz.xenondevs.commons.provider.orElseNew","location":"commons-provider/xyz.xenondevs.commons.provider/or-else-new.html","searchKeys":["orElseNew","fun <T> Provider<T?>.orElseNew(newValue: () -> T): Provider<T>","xyz.xenondevs.commons.provider.orElseNew"]},{"name":"fun <T> Provider<T?>.strongOrElse(provider: Provider<T>): Provider<T>","description":"xyz.xenondevs.commons.provider.strongOrElse","location":"commons-provider/xyz.xenondevs.commons.provider/strong-or-else.html","searchKeys":["strongOrElse","fun <T> Provider<T?>.strongOrElse(provider: Provider<T>): Provider<T>","xyz.xenondevs.commons.provider.strongOrElse"]},{"name":"fun <T> Provider<T?>.strongOrElse(provider: Provider<T>?): Provider<T?>","description":"xyz.xenondevs.commons.provider.strongOrElse","location":"commons-provider/xyz.xenondevs.commons.provider/strong-or-else.html","searchKeys":["strongOrElse","fun <T> Provider<T?>.strongOrElse(provider: Provider<T>?): Provider<T?>","xyz.xenondevs.commons.provider.strongOrElse"]},{"name":"fun <T> Provider<T?>.strongOrElse(value: T): Provider<T>","description":"xyz.xenondevs.commons.provider.strongOrElse","location":"commons-provider/xyz.xenondevs.commons.provider/strong-or-else.html","searchKeys":["strongOrElse","fun <T> Provider<T?>.strongOrElse(value: T): Provider<T>","xyz.xenondevs.commons.provider.strongOrElse"]},{"name":"fun <T> Provider<T?>.strongOrElseLazily(lazyValue: () -> T): Provider<T>","description":"xyz.xenondevs.commons.provider.strongOrElseLazily","location":"commons-provider/xyz.xenondevs.commons.provider/strong-or-else-lazily.html","searchKeys":["strongOrElseLazily","fun <T> Provider<T?>.strongOrElseLazily(lazyValue: () -> T): Provider<T>","xyz.xenondevs.commons.provider.strongOrElseLazily"]},{"name":"fun <T> Provider<T?>.strongOrElseNew(newValue: () -> T): Provider<T>","description":"xyz.xenondevs.commons.provider.strongOrElseNew","location":"commons-provider/xyz.xenondevs.commons.provider/strong-or-else-new.html","searchKeys":["strongOrElseNew","fun <T> Provider<T?>.strongOrElseNew(newValue: () -> T): Provider<T>","xyz.xenondevs.commons.provider.strongOrElseNew"]},{"name":"fun <T> combinedProvider(providers: List<Provider<T>>): Provider<List<T>>","description":"xyz.xenondevs.commons.provider.combinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/combined-provider.html","searchKeys":["combinedProvider","fun <T> combinedProvider(providers: List<Provider<T>>): Provider<List<T>>","xyz.xenondevs.commons.provider.combinedProvider"]},{"name":"fun <T> empty(): UpdateHandlerCollection<T>","description":"xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.Companion.empty","location":"commons-provider/xyz.xenondevs.commons.provider.impl/-update-handler-collection/-companion/empty.html","searchKeys":["empty","fun <T> empty(): UpdateHandlerCollection<T>","xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.Companion.empty"]},{"name":"fun <T> mutableProvider(initialValue: T): MutableProvider<T>","description":"xyz.xenondevs.commons.provider.mutableProvider","location":"commons-provider/xyz.xenondevs.commons.provider/mutable-provider.html","searchKeys":["mutableProvider","fun <T> mutableProvider(initialValue: T): MutableProvider<T>","xyz.xenondevs.commons.provider.mutableProvider"]},{"name":"fun <T> mutableProvider(lazyValue: () -> T): MutableProvider<T>","description":"xyz.xenondevs.commons.provider.mutableProvider","location":"commons-provider/xyz.xenondevs.commons.provider/mutable-provider.html","searchKeys":["mutableProvider","fun <T> mutableProvider(lazyValue: () -> T): MutableProvider<T>","xyz.xenondevs.commons.provider.mutableProvider"]},{"name":"fun <T> mutableProvider(lazyValue: () -> T, setValue: (T) -> Unit = {}): MutableProvider<T>","description":"xyz.xenondevs.commons.provider.mutableProvider","location":"commons-provider/xyz.xenondevs.commons.provider/mutable-provider.html","searchKeys":["mutableProvider","fun <T> mutableProvider(lazyValue: () -> T, setValue: (T) -> Unit = {}): MutableProvider<T>","xyz.xenondevs.commons.provider.mutableProvider"]},{"name":"fun <T> provider(lazyValue: () -> T): Provider<T>","description":"xyz.xenondevs.commons.provider.provider","location":"commons-provider/xyz.xenondevs.commons.provider/provider.html","searchKeys":["provider","fun <T> provider(lazyValue: () -> T): Provider<T>","xyz.xenondevs.commons.provider.provider"]},{"name":"fun <T> provider(value: T): Provider<T>","description":"xyz.xenondevs.commons.provider.provider","location":"commons-provider/xyz.xenondevs.commons.provider/provider.html","searchKeys":["provider","fun <T> provider(value: T): Provider<T>","xyz.xenondevs.commons.provider.provider"]},{"name":"fun <T> strongCombinedProvider(providers: List<Provider<T>>): Provider<List<T>>","description":"xyz.xenondevs.commons.provider.strongCombinedProvider","location":"commons-provider/xyz.xenondevs.commons.provider/strong-combined-provider.html","searchKeys":["strongCombinedProvider","fun <T> strongCombinedProvider(providers: List<Provider<T>>): Provider<List<T>>","xyz.xenondevs.commons.provider.strongCombinedProvider"]},{"name":"fun nextSeqNo(): Long","description":"xyz.xenondevs.commons.provider.DeferredValue.Companion.nextSeqNo","location":"commons-provider/xyz.xenondevs.commons.provider/-deferred-value/-companion/next-seq-no.html","searchKeys":["nextSeqNo","fun nextSeqNo(): Long","xyz.xenondevs.commons.provider.DeferredValue.Companion.nextSeqNo"]},{"name":"fun withStrongChild(child: Provider<*>): UpdateHandlerCollection<T>","description":"xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.withStrongChild","location":"commons-provider/xyz.xenondevs.commons.provider.impl/-update-handler-collection/with-strong-child.html","searchKeys":["withStrongChild","fun withStrongChild(child: Provider<*>): UpdateHandlerCollection<T>","xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.withStrongChild"]},{"name":"fun withStrongObserver(observer: () -> Unit): UpdateHandlerCollection<T>","description":"xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.withStrongObserver","location":"commons-provider/xyz.xenondevs.commons.provider.impl/-update-handler-collection/with-strong-observer.html","searchKeys":["withStrongObserver","fun withStrongObserver(observer: () -> Unit): UpdateHandlerCollection<T>","xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.withStrongObserver"]},{"name":"fun withStrongSubscriber(subscriber: (T) -> Unit): UpdateHandlerCollection<T>","description":"xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.withStrongSubscriber","location":"commons-provider/xyz.xenondevs.commons.provider.impl/-update-handler-collection/with-strong-subscriber.html","searchKeys":["withStrongSubscriber","fun withStrongSubscriber(subscriber: (T) -> Unit): UpdateHandlerCollection<T>","xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.withStrongSubscriber"]},{"name":"fun withWeakChild(child: Provider<*>): UpdateHandlerCollection<T>","description":"xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.withWeakChild","location":"commons-provider/xyz.xenondevs.commons.provider.impl/-update-handler-collection/with-weak-child.html","searchKeys":["withWeakChild","fun withWeakChild(child: Provider<*>): UpdateHandlerCollection<T>","xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.withWeakChild"]},{"name":"fun withoutStrongChild(child: Provider<*>): UpdateHandlerCollection<T>","description":"xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.withoutStrongChild","location":"commons-provider/xyz.xenondevs.commons.provider.impl/-update-handler-collection/without-strong-child.html","searchKeys":["withoutStrongChild","fun withoutStrongChild(child: Provider<*>): UpdateHandlerCollection<T>","xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.withoutStrongChild"]},{"name":"fun withoutStrongObserver(observer: () -> Unit): UpdateHandlerCollection<T>","description":"xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.withoutStrongObserver","location":"commons-provider/xyz.xenondevs.commons.provider.impl/-update-handler-collection/without-strong-observer.html","searchKeys":["withoutStrongObserver","fun withoutStrongObserver(observer: () -> Unit): UpdateHandlerCollection<T>","xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.withoutStrongObserver"]},{"name":"fun withoutStrongSubscriber(subscriber: (T) -> Unit): UpdateHandlerCollection<T>","description":"xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.withoutStrongSubscriber","location":"commons-provider/xyz.xenondevs.commons.provider.impl/-update-handler-collection/without-strong-subscriber.html","searchKeys":["withoutStrongSubscriber","fun withoutStrongSubscriber(subscriber: (T) -> Unit): UpdateHandlerCollection<T>","xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.withoutStrongSubscriber"]},{"name":"fun withoutWeakChild(child: Provider<*>): UpdateHandlerCollection<T>","description":"xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.withoutWeakChild","location":"commons-provider/xyz.xenondevs.commons.provider.impl/-update-handler-collection/without-weak-child.html","searchKeys":["withoutWeakChild","fun withoutWeakChild(child: Provider<*>): UpdateHandlerCollection<T>","xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.withoutWeakChild"]},{"name":"fun withoutWeakObserver(owner: Any): UpdateHandlerCollection<T>","description":"xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.withoutWeakObserver","location":"commons-provider/xyz.xenondevs.commons.provider.impl/-update-handler-collection/without-weak-observer.html","searchKeys":["withoutWeakObserver","fun withoutWeakObserver(owner: Any): UpdateHandlerCollection<T>","xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.withoutWeakObserver"]},{"name":"fun withoutWeakSubscriber(owner: Any): UpdateHandlerCollection<T>","description":"xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.withoutWeakSubscriber","location":"commons-provider/xyz.xenondevs.commons.provider.impl/-update-handler-collection/without-weak-subscriber.html","searchKeys":["withoutWeakSubscriber","fun withoutWeakSubscriber(owner: Any): UpdateHandlerCollection<T>","xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.withoutWeakSubscriber"]},{"name":"inline fun <T : Any, R : Any> MutableProvider<T?>.mapNonNull(crossinline transform: (T) -> R?, crossinline untransform: (R) -> T?): MutableProvider<R?>","description":"xyz.xenondevs.commons.provider.mapNonNull","location":"commons-provider/xyz.xenondevs.commons.provider/map-non-null.html","searchKeys":["mapNonNull","inline fun <T : Any, R : Any> MutableProvider<T?>.mapNonNull(crossinline transform: (T) -> R?, crossinline untransform: (R) -> T?): MutableProvider<R?>","xyz.xenondevs.commons.provider.mapNonNull"]},{"name":"inline fun <T : Any, R : Any> MutableProvider<T?>.strongMapNonNull(crossinline transform: (T) -> R?, crossinline untransform: (R) -> T?): MutableProvider<R?>","description":"xyz.xenondevs.commons.provider.strongMapNonNull","location":"commons-provider/xyz.xenondevs.commons.provider/strong-map-non-null.html","searchKeys":["strongMapNonNull","inline fun <T : Any, R : Any> MutableProvider<T?>.strongMapNonNull(crossinline transform: (T) -> R?, crossinline untransform: (R) -> T?): MutableProvider<R?>","xyz.xenondevs.commons.provider.strongMapNonNull"]},{"name":"inline fun <T : Any, R> Provider<T?>.mapNonNull(crossinline transform: (T) -> R): Provider<R?>","description":"xyz.xenondevs.commons.provider.mapNonNull","location":"commons-provider/xyz.xenondevs.commons.provider/map-non-null.html","searchKeys":["mapNonNull","inline fun <T : Any, R> Provider<T?>.mapNonNull(crossinline transform: (T) -> R): Provider<R?>","xyz.xenondevs.commons.provider.mapNonNull"]},{"name":"inline fun <T : Any, R> Provider<T?>.strongMapNonNull(crossinline transform: (T) -> R): Provider<R?>","description":"xyz.xenondevs.commons.provider.strongMapNonNull","location":"commons-provider/xyz.xenondevs.commons.provider/strong-map-non-null.html","searchKeys":["strongMapNonNull","inline fun <T : Any, R> Provider<T?>.strongMapNonNull(crossinline transform: (T) -> R): Provider<R?>","xyz.xenondevs.commons.provider.strongMapNonNull"]},{"name":"inline fun <T : Any> Provider<T?>.requireNotNull(crossinline message: () -> String): Provider<T>","description":"xyz.xenondevs.commons.provider.requireNotNull","location":"commons-provider/xyz.xenondevs.commons.provider/require-not-null.html","searchKeys":["requireNotNull","inline fun <T : Any> Provider<T?>.requireNotNull(crossinline message: () -> String): Provider<T>","xyz.xenondevs.commons.provider.requireNotNull"]},{"name":"inline fun <T : Any> Provider<T?>.strongRequireNotNull(crossinline message: () -> String): Provider<T>","description":"xyz.xenondevs.commons.provider.strongRequireNotNull","location":"commons-provider/xyz.xenondevs.commons.provider/strong-require-not-null.html","searchKeys":["strongRequireNotNull","inline fun <T : Any> Provider<T?>.strongRequireNotNull(crossinline message: () -> String): Provider<T>","xyz.xenondevs.commons.provider.strongRequireNotNull"]},{"name":"inline fun <T, R : Any, C : MutableCollection<in R>> Provider<Collection<T>>.mapEachNotNullTo(crossinline makeCollection: (size: Int) -> C, crossinline transform: (T) -> R?): Provider<C>","description":"xyz.xenondevs.commons.provider.mapEachNotNullTo","location":"commons-provider/xyz.xenondevs.commons.provider/map-each-not-null-to.html","searchKeys":["mapEachNotNullTo","inline fun <T, R : Any, C : MutableCollection<in R>> Provider<Collection<T>>.mapEachNotNullTo(crossinline makeCollection: (size: Int) -> C, crossinline transform: (T) -> R?): Provider<C>","xyz.xenondevs.commons.provider.mapEachNotNullTo"]},{"name":"inline fun <T, R : Any, C : MutableCollection<in R>> Provider<Collection<T>>.strongMapEachNotNullTo(crossinline makeCollection: (size: Int) -> C, crossinline transform: (T) -> R?): Provider<C>","description":"xyz.xenondevs.commons.provider.strongMapEachNotNullTo","location":"commons-provider/xyz.xenondevs.commons.provider/strong-map-each-not-null-to.html","searchKeys":["strongMapEachNotNullTo","inline fun <T, R : Any, C : MutableCollection<in R>> Provider<Collection<T>>.strongMapEachNotNullTo(crossinline makeCollection: (size: Int) -> C, crossinline transform: (T) -> R?): Provider<C>","xyz.xenondevs.commons.provider.strongMapEachNotNullTo"]},{"name":"inline fun <T, R : Any> Provider<Collection<T>>.mapEachNotNull(crossinline transform: (T) -> R?): Provider<List<R>>","description":"xyz.xenondevs.commons.provider.mapEachNotNull","location":"commons-provider/xyz.xenondevs.commons.provider/map-each-not-null.html","searchKeys":["mapEachNotNull","inline fun <T, R : Any> Provider<Collection<T>>.mapEachNotNull(crossinline transform: (T) -> R?): Provider<List<R>>","xyz.xenondevs.commons.provider.mapEachNotNull"]},{"name":"inline fun <T, R : Any> Provider<Collection<T>>.strongMapEachNotNull(crossinline transform: (T) -> R?): Provider<List<R>>","description":"xyz.xenondevs.commons.provider.strongMapEachNotNull","location":"commons-provider/xyz.xenondevs.commons.provider/strong-map-each-not-null.html","searchKeys":["strongMapEachNotNull","inline fun <T, R : Any> Provider<Collection<T>>.strongMapEachNotNull(crossinline transform: (T) -> R?): Provider<List<R>>","xyz.xenondevs.commons.provider.strongMapEachNotNull"]},{"name":"inline fun <T, R, C : MutableCollection<in R>> Provider<Collection<T>>.flatMapCollectionTo(crossinline makeCollection: (size: Int) -> C, crossinline transform: (T) -> Iterable<R>): Provider<C>","description":"xyz.xenondevs.commons.provider.flatMapCollectionTo","location":"commons-provider/xyz.xenondevs.commons.provider/flat-map-collection-to.html","searchKeys":["flatMapCollectionTo","inline fun <T, R, C : MutableCollection<in R>> Provider<Collection<T>>.flatMapCollectionTo(crossinline makeCollection: (size: Int) -> C, crossinline transform: (T) -> Iterable<R>): Provider<C>","xyz.xenondevs.commons.provider.flatMapCollectionTo"]},{"name":"inline fun <T, R, C : MutableCollection<in R>> Provider<Collection<T>>.mapEachTo(crossinline makeCollection: (size: Int) -> C, crossinline transform: (T) -> R): Provider<C>","description":"xyz.xenondevs.commons.provider.mapEachTo","location":"commons-provider/xyz.xenondevs.commons.provider/map-each-to.html","searchKeys":["mapEachTo","inline fun <T, R, C : MutableCollection<in R>> Provider<Collection<T>>.mapEachTo(crossinline makeCollection: (size: Int) -> C, crossinline transform: (T) -> R): Provider<C>","xyz.xenondevs.commons.provider.mapEachTo"]},{"name":"inline fun <T, R, C : MutableCollection<in R>> Provider<Collection<T>>.strongFlatMapCollectionTo(crossinline makeCollection: (size: Int) -> C, crossinline transform: (T) -> Iterable<R>): Provider<C>","description":"xyz.xenondevs.commons.provider.strongFlatMapCollectionTo","location":"commons-provider/xyz.xenondevs.commons.provider/strong-flat-map-collection-to.html","searchKeys":["strongFlatMapCollectionTo","inline fun <T, R, C : MutableCollection<in R>> Provider<Collection<T>>.strongFlatMapCollectionTo(crossinline makeCollection: (size: Int) -> C, crossinline transform: (T) -> Iterable<R>): Provider<C>","xyz.xenondevs.commons.provider.strongFlatMapCollectionTo"]},{"name":"inline fun <T, R, C : MutableCollection<in R>> Provider<Collection<T>>.strongMapEachTo(crossinline makeCollection: (size: Int) -> C, crossinline transform: (T) -> R): Provider<C>","description":"xyz.xenondevs.commons.provider.strongMapEachTo","location":"commons-provider/xyz.xenondevs.commons.provider/strong-map-each-to.html","searchKeys":["strongMapEachTo","inline fun <T, R, C : MutableCollection<in R>> Provider<Collection<T>>.strongMapEachTo(crossinline makeCollection: (size: Int) -> C, crossinline transform: (T) -> R): Provider<C>","xyz.xenondevs.commons.provider.strongMapEachTo"]},{"name":"inline fun <T, R> Provider<Collection<T>>.flatMapCollection(crossinline transform: (T) -> Iterable<R>): Provider<List<R>>","description":"xyz.xenondevs.commons.provider.flatMapCollection","location":"commons-provider/xyz.xenondevs.commons.provider/flat-map-collection.html","searchKeys":["flatMapCollection","inline fun <T, R> Provider<Collection<T>>.flatMapCollection(crossinline transform: (T) -> Iterable<R>): Provider<List<R>>","xyz.xenondevs.commons.provider.flatMapCollection"]},{"name":"inline fun <T, R> Provider<Collection<T>>.mapEach(crossinline transform: (T) -> R): Provider<List<R>>","description":"xyz.xenondevs.commons.provider.mapEach","location":"commons-provider/xyz.xenondevs.commons.provider/map-each.html","searchKeys":["mapEach","inline fun <T, R> Provider<Collection<T>>.mapEach(crossinline transform: (T) -> R): Provider<List<R>>","xyz.xenondevs.commons.provider.mapEach"]},{"name":"inline fun <T, R> Provider<Collection<T>>.strongFlatMapCollection(crossinline transform: (T) -> Iterable<R>): Provider<List<R>>","description":"xyz.xenondevs.commons.provider.strongFlatMapCollection","location":"commons-provider/xyz.xenondevs.commons.provider/strong-flat-map-collection.html","searchKeys":["strongFlatMapCollection","inline fun <T, R> Provider<Collection<T>>.strongFlatMapCollection(crossinline transform: (T) -> Iterable<R>): Provider<List<R>>","xyz.xenondevs.commons.provider.strongFlatMapCollection"]},{"name":"inline fun <T, R> Provider<Collection<T>>.strongMapEach(crossinline transform: (T) -> R): Provider<List<R>>","description":"xyz.xenondevs.commons.provider.strongMapEach","location":"commons-provider/xyz.xenondevs.commons.provider/strong-map-each.html","searchKeys":["strongMapEach","inline fun <T, R> Provider<Collection<T>>.strongMapEach(crossinline transform: (T) -> R): Provider<List<R>>","xyz.xenondevs.commons.provider.strongMapEach"]},{"name":"inline fun <T> Provider<T>.require(crossinline condition: (T) -> Boolean, crossinline message: (T) -> String): Provider<T>","description":"xyz.xenondevs.commons.provider.require","location":"commons-provider/xyz.xenondevs.commons.provider/require.html","searchKeys":["require","inline fun <T> Provider<T>.require(crossinline condition: (T) -> Boolean, crossinline message: (T) -> String): Provider<T>","xyz.xenondevs.commons.provider.require"]},{"name":"inline fun <T> Provider<T>.strongRequire(crossinline condition: (T) -> Boolean, crossinline message: (T) -> String): Provider<T>","description":"xyz.xenondevs.commons.provider.strongRequire","location":"commons-provider/xyz.xenondevs.commons.provider/strong-require.html","searchKeys":["strongRequire","inline fun <T> Provider<T>.strongRequire(crossinline condition: (T) -> Boolean, crossinline message: (T) -> String): Provider<T>","xyz.xenondevs.commons.provider.strongRequire"]},{"name":"interface DeferredValue<out T> : Comparable<DeferredValue<*>> ","description":"xyz.xenondevs.commons.provider.DeferredValue","location":"commons-provider/xyz.xenondevs.commons.provider/-deferred-value/index.html","searchKeys":["DeferredValue","interface DeferredValue<out T> : Comparable<DeferredValue<*>> ","xyz.xenondevs.commons.provider.DeferredValue"]},{"name":"interface MutableProvider<T> : Provider<T> ","description":"xyz.xenondevs.commons.provider.MutableProvider","location":"commons-provider/xyz.xenondevs.commons.provider/-mutable-provider/index.html","searchKeys":["MutableProvider","interface MutableProvider<T> : Provider<T> ","xyz.xenondevs.commons.provider.MutableProvider"]},{"name":"interface Provider<out T> : Supplier<T> ","description":"xyz.xenondevs.commons.provider.Provider","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/index.html","searchKeys":["Provider","interface Provider<out T> : Supplier<T> ","xyz.xenondevs.commons.provider.Provider"]},{"name":"object Companion","description":"xyz.xenondevs.commons.provider.DeferredValue.Companion","location":"commons-provider/xyz.xenondevs.commons.provider/-deferred-value/-companion/index.html","searchKeys":["Companion","object Companion","xyz.xenondevs.commons.provider.DeferredValue.Companion"]},{"name":"object Companion","description":"xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.Companion","location":"commons-provider/xyz.xenondevs.commons.provider.impl/-update-handler-collection/-companion/index.html","searchKeys":["Companion","object Companion","xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.Companion"]},{"name":"open fun set(value: T)","description":"xyz.xenondevs.commons.provider.MutableProvider.set","location":"commons-provider/xyz.xenondevs.commons.provider/-mutable-provider/set.html","searchKeys":["set","open fun set(value: T)","xyz.xenondevs.commons.provider.MutableProvider.set"]},{"name":"open operator fun <X> getValue(thisRef: X?, property: KProperty<*>?): T","description":"xyz.xenondevs.commons.provider.Provider.getValue","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/get-value.html","searchKeys":["getValue","open operator fun <X> getValue(thisRef: X?, property: KProperty<*>?): T","xyz.xenondevs.commons.provider.Provider.getValue"]},{"name":"open operator fun <X> setValue(thisRef: X?, property: KProperty<*>, value: T)","description":"xyz.xenondevs.commons.provider.MutableProvider.setValue","location":"commons-provider/xyz.xenondevs.commons.provider/-mutable-provider/set-value.html","searchKeys":["setValue","open operator fun <X> setValue(thisRef: X?, property: KProperty<*>, value: T)","xyz.xenondevs.commons.provider.MutableProvider.setValue"]},{"name":"open operator override fun compareTo(other: DeferredValue<*>): Int","description":"xyz.xenondevs.commons.provider.DeferredValue.compareTo","location":"commons-provider/xyz.xenondevs.commons.provider/-deferred-value/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: DeferredValue<*>): Int","xyz.xenondevs.commons.provider.DeferredValue.compareTo"]},{"name":"open override fun get(): T","description":"xyz.xenondevs.commons.provider.Provider.get","location":"commons-provider/xyz.xenondevs.commons.provider/-provider/get.html","searchKeys":["get","open override fun get(): T","xyz.xenondevs.commons.provider.Provider.get"]},{"name":"open override val seqNo: Long","description":"xyz.xenondevs.commons.provider.DeferredValue.Direct.seqNo","location":"commons-provider/xyz.xenondevs.commons.provider/-deferred-value/-direct/seq-no.html","searchKeys":["seqNo","open override val seqNo: Long","xyz.xenondevs.commons.provider.DeferredValue.Direct.seqNo"]},{"name":"open override val seqNo: Long","description":"xyz.xenondevs.commons.provider.DeferredValue.Lazy.seqNo","location":"commons-provider/xyz.xenondevs.commons.provider/-deferred-value/-lazy/seq-no.html","searchKeys":["seqNo","open override val seqNo: Long","xyz.xenondevs.commons.provider.DeferredValue.Lazy.seqNo"]},{"name":"open override val seqNo: Long","description":"xyz.xenondevs.commons.provider.DeferredValue.Mapped.seqNo","location":"commons-provider/xyz.xenondevs.commons.provider/-deferred-value/-mapped/seq-no.html","searchKeys":["seqNo","open override val seqNo: Long","xyz.xenondevs.commons.provider.DeferredValue.Mapped.seqNo"]},{"name":"open override val seqNo: Long","description":"xyz.xenondevs.commons.provider.DeferredValue.MappedMulti.seqNo","location":"commons-provider/xyz.xenondevs.commons.provider/-deferred-value/-mapped-multi/seq-no.html","searchKeys":["seqNo","open override val seqNo: Long","xyz.xenondevs.commons.provider.DeferredValue.MappedMulti.seqNo"]},{"name":"open override val seqNo: Long","description":"xyz.xenondevs.commons.provider.DeferredValue.ReEmitted.seqNo","location":"commons-provider/xyz.xenondevs.commons.provider/-deferred-value/-re-emitted/seq-no.html","searchKeys":["seqNo","open override val seqNo: Long","xyz.xenondevs.commons.provider.DeferredValue.ReEmitted.seqNo"]},{"name":"open override val value: T","description":"xyz.xenondevs.commons.provider.DeferredValue.Direct.value","location":"commons-provider/xyz.xenondevs.commons.provider/-deferred-value/-direct/value.html","searchKeys":["value","open override val value: T","xyz.xenondevs.commons.provider.DeferredValue.Direct.value"]},{"name":"open override val value: T","description":"xyz.xenondevs.commons.provider.DeferredValue.Lazy.value","location":"commons-provider/xyz.xenondevs.commons.provider/-deferred-value/-lazy/value.html","searchKeys":["value","open override val value: T","xyz.xenondevs.commons.provider.DeferredValue.Lazy.value"]},{"name":"open override val value: T","description":"xyz.xenondevs.commons.provider.DeferredValue.Mapped.value","location":"commons-provider/xyz.xenondevs.commons.provider/-deferred-value/-mapped/value.html","searchKeys":["value","open override val value: T","xyz.xenondevs.commons.provider.DeferredValue.Mapped.value"]},{"name":"open override val value: T","description":"xyz.xenondevs.commons.provider.DeferredValue.MappedMulti.value","location":"commons-provider/xyz.xenondevs.commons.provider/-deferred-value/-mapped-multi/value.html","searchKeys":["value","open override val value: T","xyz.xenondevs.commons.provider.DeferredValue.MappedMulti.value"]},{"name":"open override val value: T","description":"xyz.xenondevs.commons.provider.DeferredValue.ReEmitted.value","location":"commons-provider/xyz.xenondevs.commons.provider/-deferred-value/-re-emitted/value.html","searchKeys":["value","open override val value: T","xyz.xenondevs.commons.provider.DeferredValue.ReEmitted.value"]},{"name":"operator fun <T> Provider<Array<T>>.get(index: Int): Provider<T>","description":"xyz.xenondevs.commons.provider.get","location":"commons-provider/xyz.xenondevs.commons.provider/get.html","searchKeys":["get","operator fun <T> Provider<Array<T>>.get(index: Int): Provider<T>","xyz.xenondevs.commons.provider.get"]},{"name":"operator fun <T> Provider<Array<T>>.get(index: Provider<Int>): Provider<T>","description":"xyz.xenondevs.commons.provider.get","location":"commons-provider/xyz.xenondevs.commons.provider/get.html","searchKeys":["get","operator fun <T> Provider<Array<T>>.get(index: Provider<Int>): Provider<T>","xyz.xenondevs.commons.provider.get"]},{"name":"operator fun <T> Provider<List<T>>.get(index: Int): Provider<T>","description":"xyz.xenondevs.commons.provider.get","location":"commons-provider/xyz.xenondevs.commons.provider/get.html","searchKeys":["get","operator fun <T> Provider<List<T>>.get(index: Int): Provider<T>","xyz.xenondevs.commons.provider.get"]},{"name":"operator fun <T> Provider<List<T>>.get(index: Provider<Int>): Provider<T>","description":"xyz.xenondevs.commons.provider.get","location":"commons-provider/xyz.xenondevs.commons.provider/get.html","searchKeys":["get","operator fun <T> Provider<List<T>>.get(index: Provider<Int>): Provider<T>","xyz.xenondevs.commons.provider.get"]},{"name":"val NULL_PROVIDER: Provider<Nothing?>","description":"xyz.xenondevs.commons.provider.NULL_PROVIDER","location":"commons-provider/xyz.xenondevs.commons.provider/-n-u-l-l_-p-r-o-v-i-d-e-r.html","searchKeys":["NULL_PROVIDER","val NULL_PROVIDER: Provider<Nothing?>","xyz.xenondevs.commons.provider.NULL_PROVIDER"]},{"name":"val children: Set<Provider<*>>","description":"xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.children","location":"commons-provider/xyz.xenondevs.commons.provider.impl/-update-handler-collection/children.html","searchKeys":["children","val children: Set<Provider<*>>","xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.children"]},{"name":"val parent: DeferredValue<P>","description":"xyz.xenondevs.commons.provider.DeferredValue.Mapped.parent","location":"commons-provider/xyz.xenondevs.commons.provider/-deferred-value/-mapped/parent.html","searchKeys":["parent","val parent: DeferredValue<P>","xyz.xenondevs.commons.provider.DeferredValue.Mapped.parent"]},{"name":"val parent: DeferredValue<T>","description":"xyz.xenondevs.commons.provider.DeferredValue.ReEmitted.parent","location":"commons-provider/xyz.xenondevs.commons.provider/-deferred-value/-re-emitted/parent.html","searchKeys":["parent","val parent: DeferredValue<T>","xyz.xenondevs.commons.provider.DeferredValue.ReEmitted.parent"]},{"name":"val parents: List<DeferredValue<P>>","description":"xyz.xenondevs.commons.provider.DeferredValue.MappedMulti.parents","location":"commons-provider/xyz.xenondevs.commons.provider/-deferred-value/-mapped-multi/parents.html","searchKeys":["parents","val parents: List<DeferredValue<P>>","xyz.xenondevs.commons.provider.DeferredValue.MappedMulti.parents"]},{"name":"val strongChildren: Collection<Provider<*>>","description":"xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.strongChildren","location":"commons-provider/xyz.xenondevs.commons.provider.impl/-update-handler-collection/strong-children.html","searchKeys":["strongChildren","val strongChildren: Collection<Provider<*>>","xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.strongChildren"]},{"name":"val strongObservers: Collection<() -> Unit>","description":"xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.strongObservers","location":"commons-provider/xyz.xenondevs.commons.provider.impl/-update-handler-collection/strong-observers.html","searchKeys":["strongObservers","val strongObservers: Collection<() -> Unit>","xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.strongObservers"]},{"name":"val strongSubscribers: Collection<(T) -> Unit>","description":"xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.strongSubscribers","location":"commons-provider/xyz.xenondevs.commons.provider.impl/-update-handler-collection/strong-subscribers.html","searchKeys":["strongSubscribers","val strongSubscribers: Collection<(T) -> Unit>","xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.strongSubscribers"]},{"name":"val transform: (List<P>) -> T","description":"xyz.xenondevs.commons.provider.DeferredValue.MappedMulti.transform","location":"commons-provider/xyz.xenondevs.commons.provider/-deferred-value/-mapped-multi/transform.html","searchKeys":["transform","val transform: (List<P>) -> T","xyz.xenondevs.commons.provider.DeferredValue.MappedMulti.transform"]},{"name":"val transform: (P) -> T","description":"xyz.xenondevs.commons.provider.DeferredValue.Mapped.transform","location":"commons-provider/xyz.xenondevs.commons.provider/-deferred-value/-mapped/transform.html","searchKeys":["transform","val transform: (P) -> T","xyz.xenondevs.commons.provider.DeferredValue.Mapped.transform"]},{"name":"val weakChildren: Collection<Provider<*>>","description":"xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.weakChildren","location":"commons-provider/xyz.xenondevs.commons.provider.impl/-update-handler-collection/weak-children.html","searchKeys":["weakChildren","val weakChildren: Collection<Provider<*>>","xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.weakChildren"]},{"name":"val weakObservers: Map<Any, Set<(Any) -> Unit>>","description":"xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.weakObservers","location":"commons-provider/xyz.xenondevs.commons.provider.impl/-update-handler-collection/weak-observers.html","searchKeys":["weakObservers","val weakObservers: Map<Any, Set<(Any) -> Unit>>","xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.weakObservers"]},{"name":"val weakSubscribers: Map<Any, Set<(Any, T) -> Unit>>","description":"xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.weakSubscribers","location":"commons-provider/xyz.xenondevs.commons.provider.impl/-update-handler-collection/weak-subscribers.html","searchKeys":["weakSubscribers","val weakSubscribers: Map<Any, Set<(Any, T) -> Unit>>","xyz.xenondevs.commons.provider.impl.UpdateHandlerCollection.weakSubscribers"]}]